/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
 .simpleDemo ul[dnd-list] {
  min-height: 42px;
  padding-left: 0px;
}

/**
* The dndDraggingSource class will be applied to
* the source element of a drag operation. It makes
* sense to hide it to give the user the feeling
* that he's actually moving it.
*/
.simpleDemo ul[dnd-list] .dndDraggingSource {
  display: none;
}

/**
* An element with .dndPlaceholder class will be
* added to the dnd-list while the user is dragging
* over it.
*/
.simpleDemo ul[dnd-list] .dndPlaceholder {
  background-color: #ddd;
  display: block;
  min-height: 42px;
}

a {
  color: black;
}
a:hover {
  text-decoration: none;
  color: black;
}

.simpleDemo ul[dnd-list] li {
  background-color: #fff;
  border: 1px solid #ddd;
  border-top-right-radius: 4px;
  border-top-left-radius: 4px;
  display: block;
  padding: 10px 15px;
  margin-bottom: -1px;
}

/**
* Show selected elements in green
*/
.simpleDemo ul[dnd-list] li.selected {
  background-color: #dff0d8;
  color: #3c763d;
}

.list-group {
  padding-bottom: 10px;
}

.list-group-item {
  margin: 5px;
}

.container {
  padding-left: 0px;
  padding-right: 0px;
}

.simpleDemo {
  padding: 0px;
  padding-top: 5px;
  margin: auto;
}

.card {
  margin-bottom: 10px;
  position: relative;
}

.bg-light-blue {
  background-color: #DFE3E6;
}

.single-list {
  padding-right: 10px;
  padding-left: 10px;
}

.card-title i {
  float: right;
  color: grey;
}
.card-title i:hover {
  cursor: pointer;
  color: black;
}

.add-new-list:hover {
  cursor: pointer;
  background-color: grey;
}

.new-list-title-input {
  margin-bottom: 5px;
}

.new-list-form, .btn-group.col-lg-12 {
  padding: 5px;
}

.add-new-list-item {
  padding: 0px !important;
}
/*
.button-group .btn-danger {
  float: right;
} */

.close-icon {
  display: none;
  color: grey;
  position: absolute;
  right: -14px;
  top: -14px;
}

.close-icon:hover {
  cursor: pointer;
  color: black;
}

.card.bg-light-blue:hover h3.close-icon {
  display: block;
}